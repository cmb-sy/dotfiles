[user]
	name = cmb-sy
	email = free.nakashima@gmail.com
[include]
    path = ~/gitconfig.local
[alias]
    a = add
    aa = add --all
    br = branch
    co = checkout
    com = commit
    di = diff
    ds = diff --staged
    fe = fetch
    g = log --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
    ga = log --graph --decorate --oneline --all
    gg = log --all --graph --date=short --decorate=short --pretty=format:'%Cgreen%h %Creset%cd %Cblue%cn %Cred%d %Creset%s'
    l = log
    ld = git log --diff-filter=D --summary
    lo = log --oneline
    lp = log -p
    ls = log --stat
    pl = pull
    ps = push
    rr = restore
    s = status
    sh = show
    st = stash
    sub-update = !git submodule foreach git pull origin master
    sw = "!f () { git switch $(git branch $1 | grep -v 'HEAD' | fzf --reverse | sed 's@remotes/origin/@@' | cut -c 3-); }; f"
    del = "!f () { git branch -D $(git branch $1 | grep -v 'HEAD' | fzf --reverse | sed 's@remotes/origin/@@' | cut -c 3-); }; f"
    # ブランチ移動せずに指定したブランチを最新にする
	update = "!f () { if [ -z '$(git diff HEAD..$1)' ]; then git pull origin; else git branch -D $1 && git fetch origin $1:$1 && git branch -u origin/$1 $1; fi; }; f"
	graph = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Creset• %<(75,trunc)%s (%cN, %ar) %Cred%d' --date-order
    unstage = !git add --all && git reset HEAD --hard
[color]
    ui = auto
[core]
    editor = vim
[merge]
    ff = false
[pull]
    rebase = true
[push]
    default = simple
[rerere]
    enabled = true

[github]
	user = cmb-sy
[init]
	defaultBranch = main
